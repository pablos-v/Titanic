version: '3'

networks:
  discovery-net:
    driver: bridge
  backend-net:
    driver: bridge

volumes:
  cache:
    driver: local
  db-data:
    driver: local

services:

  eureka:
    image: titanic-eureka
    build:
      context: ./Eureka
      dockerfile: Dockerfile
    container_name: eureka-server
    networks:
      - discovery-net
    ports:
      - '8761:8761'

  backend:
    image: titanic-backend
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: backend
    networks:
      - discovery-net
      - backend-net
    depends_on:
      - eureka
      - db
      - redis
    ports:
      - '8092:8092'
    environment:
      - SERVER_PORT=8092
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-postgres/postgres
      - SPRING_DATA_REDIS_HOST=db-redis
      - EUREKA.CLIENT.SERVICEURL.DEFAULTZONE=http://eureka-server:8761/eureka/

  frontend:
    image: titanic-frontend
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: frontend
    networks:
      - discovery-net
    depends_on:
      - backend
    ports:
      - '8089:8089'
    environment:
      - SERVER_PORT=8089
      - EUREKA.CLIENT.SERVICEURL.DEFAULTZONE=http://eureka-server:8761/eureka/

  db:
    image: postgres:12-alpine
    restart: always
    container_name: db-postgres
    networks:
      - backend-net
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    ports:
      - '5434:5432'
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7.2-rc-alpine
    restart: always
    container_name: db-redis
    networks:
      - backend-net
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass parole
    volumes:
      - cache:/data
